[{"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\index.js":"1","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\serviceWorker.js":"2","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\store.js":"3","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SideBar\\SideBar.js":"4","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\SubredditBox.js":"5","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\RedditPostList.js":"6","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RightSideBar\\RightSideBar.js":"7","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\reddit.js":"8","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPost\\RedditPost.js":"9","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\Header\\Header.js":"10","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\App.js":"11","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\subredditsSlice.js":"12","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\redditPostListSlice.js":"13","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditPage\\SubredditPage.js":"14","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SearchResults\\SearchResults.js":"15"},{"size":644,"mtime":1612857171732,"results":"16","hashOfConfig":"17"},{"size":5141,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":346,"mtime":1613069251325,"results":"19","hashOfConfig":"17"},{"size":1350,"mtime":1612950290509,"results":"20","hashOfConfig":"17"},{"size":1784,"mtime":1612985288461,"results":"21","hashOfConfig":"17"},{"size":440,"mtime":1613035205205,"results":"22","hashOfConfig":"17"},{"size":4666,"mtime":1612985717456,"results":"23","hashOfConfig":"17"},{"size":4630,"mtime":1612990106525,"results":"24","hashOfConfig":"17"},{"size":3231,"mtime":1613067844868,"results":"25","hashOfConfig":"17"},{"size":2850,"mtime":1613075315362,"results":"26","hashOfConfig":"17"},{"size":2573,"mtime":1613070692949,"results":"27","hashOfConfig":"17"},{"size":350,"mtime":1612906200804,"results":"28","hashOfConfig":"17"},{"size":887,"mtime":1612954427309,"results":"29","hashOfConfig":"17"},{"size":4479,"mtime":1613068069760,"results":"30","hashOfConfig":"17"},{"size":685,"mtime":1613074299245,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1yv4te4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\index.js",[],["67","68"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\serviceWorker.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\store.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SideBar\\SideBar.js",["69"],"import React from 'react';\r\nimport './SideBar.css';\r\nimport SubredditBox from '../SubredditBox/SubredditBox';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport default function SideBar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__option\" onClick={() => {\r\n                window.location.href = '/';\r\n            }}>\r\n                <HomeIcon />\r\n                <p className=\"sidebar__option__p\">Home</p>\r\n            </div>\r\n            <div className=\"sidebar__option\" onClick={() => {\r\n                window.location.href = '/popular';\r\n            }}>\r\n                <TrendingUpIcon />\r\n                <p className=\"sidebar__option__p\">Popular</p>\r\n            </div>\r\n            <div className=\"sidebar__option\" onClick={() => {\r\n                window.location.href = '/controversial';\r\n            }}>\r\n                <ForumIcon />\r\n                <p className=\"sidebar__option__p\">Controversial</p>\r\n            </div>\r\n\r\n            <div className=\"sidebar__subreddit\">\r\n                <h3 className=\"subreddit__header\">Subreddits</h3>\r\n                <SubredditBox />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\SubredditBox.js",["70","71"],"import React from 'react';\r\nimport './SubredditBox.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport RedditCall from '../../app/reddit';\r\nimport { getTrendingSubreddits } from './subredditsSlice';\r\n\r\n\r\nexport default function SubredditBox() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        RedditCall.fetchTrendingSubreddits().then(results => {\r\n            dispatch(getTrendingSubreddits(results));\r\n        })\r\n    }, []);\r\n\r\n    var subredditList = useSelector(state => state.subreddits);\r\n    subredditList = subredditList.slice(0, 10);\r\n\r\n    return (\r\n        <div className=\"subreddit-boxes\">\r\n            {\r\n                subredditList && subredditList.map(sub => (\r\n                    <Link to={`/${sub.data.display_name_prefixed}`} key={sub.data.id} >\r\n                        <div className=\"subreddit-box\" onClick={() => {\r\n                            window.location.href=`/${sub.data.display_name_prefixed}`\r\n                        }}>\r\n                            <div className=\"subreddit__image\">\r\n                                <img src={sub.data.icon_img} />\r\n                            </div>\r\n                            <div className=\"subreddit__details\">\r\n                                <h3 className=\"subreddit\">{sub.data.display_name_prefixed}</h3>\r\n                                <p>{(sub.data.subscribers > 1000 && sub.data.subscribers < 1000000) ? (sub.data.subscribers / 1000).toFixed(1) + 'k' : (sub.data.subscribers / 1000000).toFixed(1) + 'M'} Members</p>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\RedditPostList.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RightSideBar\\RightSideBar.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\reddit.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPost\\RedditPost.js",["72","73","74"],"import React from 'react';\r\nimport './RedditPost.css';\r\nimport { useState, useEffect } from 'react';\r\nimport RedditCall from '../../app/reddit';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport AbortController from \"abort-controller\"\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ModeCommentIcon from '@material-ui/icons/ModeComment';\r\nimport MoreIcon from '@material-ui/icons/More';\r\n\r\nexport default function RedditPost(props) {\r\n    const [subredditIcon, setSubredditIcon] = useState('');\r\n    const subredditName = props.post.data.subreddit_name_prefixed;\r\n\r\n    const controller = new AbortController()\r\n\r\n    useEffect(() => {\r\n        RedditCall.fetchSubredditAbout(subredditName).then(results => {\r\n            setSubredditIcon(results.icon_img)\r\n        });\r\n        return () => controller.abort();\r\n    }, []);\r\n\r\n    var unixTimestamp = props.post.data.created_utc;\r\n    var dat = new Date(unixTimestamp * 1000);\r\n    var hours = dat.getHours();\r\n    var realTime = hours + ' hours';\r\n\r\n\r\n    return (\r\n        <div className=\"redditpost\">\r\n            <div className=\"redditpost__top\">\r\n                <Link to={`/${props.post.data.subreddit_name_prefixed}`} key={props.post.data.id} >\r\n                    <div className=\"redditpost-subreddit-image\">\r\n                        <img src={subredditIcon} />\r\n                    </div>\r\n                </Link>\r\n                <p className=\"redditpost-sub\" onClick={() => {\r\n                    window.location.href = `/${props.post.data.subreddit_name_prefixed}`;\r\n                }}>{props.post.data.subreddit_name_prefixed}</p>\r\n                <p className=\"redditpost-by\">Posted by u/{props.post.data.author}</p>\r\n                <p className=\"redditpost-time\">{realTime} ago</p>\r\n            </div>\r\n            <div className=\"redditpost__middle\">\r\n                <h3 className=\"redditpost-post\">{props.post.data.title}</h3>\r\n                {props.post.data.url_overridden_by_dest && (\r\n                    <div className=\"redditpost-post-image\" onError={(e) => e.target.style.display = \"none\"}>\r\n                        <img src={props.post.data.url_overridden_by_dest} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"redditpost__bottom\">\r\n                <div className=\"redditpost-total-likes\">\r\n                    <ArrowUpwardIcon />\r\n                    <p className=\"redditpost-likes\">{props.post.data.score > 1000 ? (props.post.data.score / 1000).toFixed(1) + 'k' : props.post.data.score}</p>\r\n                    <ArrowDownwardIcon />\r\n                </div>\r\n                <div className=\"redditpost-total-comments\">\r\n                    <ModeCommentIcon />\r\n                    <p className=\"redditpost-comment\">{props.post.data.num_comments > 1000 ? (props.post.data.num_comments / 1000).toFixed(1) + 'k' : props.post.data.num_comments}</p>\r\n                </div>\r\n                <div className=\"redditpost-total-details\">\r\n                    <MoreIcon />\r\n                    <p className=\"redditpost-details\">Details</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\Header\\Header.js",["75","76","77","78","79","80"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\App.js",["81"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\subredditsSlice.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\redditPostListSlice.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditPage\\SubredditPage.js",["82","83"],"import React from 'react';\r\nimport './SubredditPage.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport AbortController from \"abort-controller\"\r\n\r\nimport RedditCall from '../../app/reddit';\r\nimport RedditPostList from '../RedditPostList/RedditPostList';\r\n\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\n\r\n\r\nexport default function SubredditPage({ match }) {\r\n    const [subredditAbout, setSubredditAbout] = useState({});\r\n    const [subredditPosts, setSubredditPosts] = useState([]);\r\n    const [subredditPostsHot, setSubredditPostsHot] = useState([]);\r\n    const [subredditPostsNew, setSubredditPostsNew] = useState([]);\r\n    const [subredditPostsRising, setSubredditPostsRising] = useState([]);\r\n\r\n    const controller = new AbortController();\r\n    \r\n    useEffect(() => {\r\n        RedditCall.fetchSubredditAbout(`r/${match.params.id}`).then(results => {\r\n            setSubredditAbout(results);\r\n        });\r\n        RedditCall.fetchSubredditPosts(`r/${match.params.id}`).then(results => {\r\n            setSubredditPosts(results)\r\n        });\r\n        RedditCall.fetchSubredditPostsHot(`r/${match.params.id}`).then(results => {\r\n            setSubredditPostsHot(results)\r\n        });\r\n        RedditCall.fetchSubredditPostsRising(`r/${match.params.id}`).then(results => {\r\n            setSubredditPostsRising(results)\r\n        });\r\n        RedditCall.fetchSubredditPostsNew(`r/${match.params.id}`).then(results => {\r\n            setSubredditPostsNew(results)\r\n        });\r\n        return controller.abort();\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"subreddit__main\">\r\n            <div className=\"subredditHead\">\r\n                <div className=\"subredditHead__top\" style={{\r\n                    backgroundImage: `url(${subredditAbout.banner_img})`,\r\n                    backgroundPosition: `center`,\r\n                    backgroundRepeat: `no-repeat`,\r\n                    backgroundSize: `cover`\r\n                }}>\r\n                    <div className=\"subredditHeadImage\">\r\n                        <img src={subredditAbout.icon_img} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"subredditHead__middle\">\r\n                    <h1>{subredditAbout.display_name_prefixed}</h1>\r\n                    <h3>{subredditAbout.public_description}</h3>\r\n                    <p>{subredditAbout.subscribers} Members</p>\r\n                    <p>{subredditAbout.accounts_active} Active Members</p>\r\n                </div>\r\n                <div className=\"subredditHead__bottom\">\r\n                    <div className=\"subredditNav active\" onClick={() => {\r\n                        window.location.href = `/${subredditAbout.display_name_prefixed}/hot`\r\n                    }}>\r\n                        <WhatshotIcon />\r\n                        <p className=\"\">Hot</p>\r\n                    </div>\r\n                    <div className=\"subredditNav\" onClick={() => {\r\n                        window.location.href = `/${subredditAbout.display_name_prefixed}/latest`\r\n                    }}>\r\n                        <FiberNewIcon />\r\n                        <p className=\"\">Latest</p>\r\n                    </div>\r\n                    <div className=\"subredditNav\" onClick={() => {\r\n                        window.location.href = `/${subredditAbout.display_name_prefixed}/rising`\r\n                    }}>\r\n                        <BarChartIcon />\r\n                        <p className=\"\">Rising</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Switch>\r\n                <Route exact path={`/${subredditAbout.display_name_prefixed}`}>\r\n                    <RedditPostList posts={subredditPosts} />\r\n                </Route>\r\n                <Route exact path={`/${subredditAbout.display_name_prefixed}/hot`}>\r\n                    <RedditPostList posts={subredditPostsHot} />\r\n                </Route>\r\n                <Route exact path={`/${subredditAbout.display_name_prefixed}/latest`}>\r\n                    <RedditPostList posts={subredditPostsNew} />\r\n                </Route>\r\n                <Route exact path={`/${subredditAbout.display_name_prefixed}/rising`}>\r\n                    <RedditPostList posts={subredditPostsRising} />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SearchResults\\SearchResults.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":9,"column":10,"nodeType":"90","messageId":"91","endLine":9,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":19,"column":8,"nodeType":"94","endLine":19,"endColumn":10,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":33,"column":33,"nodeType":"98","endLine":33,"endColumn":64},{"ruleId":"92","severity":1,"message":"99","line":25,"column":8,"nodeType":"94","endLine":25,"endColumn":10,"suggestions":"100"},{"ruleId":"96","severity":1,"message":"97","line":38,"column":25,"nodeType":"98","endLine":38,"endColumn":52},{"ruleId":"96","severity":1,"message":"97","line":51,"column":25,"nodeType":"98","endLine":51,"endColumn":77},{"ruleId":"88","severity":1,"message":"101","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":18},{"ruleId":"88","severity":1,"message":"102","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":26},{"ruleId":"88","severity":1,"message":"103","line":8,"column":10,"nodeType":"90","messageId":"91","endLine":8,"endColumn":21},{"ruleId":"88","severity":1,"message":"104","line":9,"column":17,"nodeType":"90","messageId":"91","endLine":9,"endColumn":21},{"ruleId":"88","severity":1,"message":"105","line":18,"column":11,"nodeType":"90","messageId":"91","endLine":18,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":38,"column":21,"nodeType":"98","endLine":38,"endColumn":47},{"ruleId":"92","severity":1,"message":"106","line":36,"column":6,"nodeType":"94","endLine":36,"endColumn":16,"suggestions":"107"},{"ruleId":"92","severity":1,"message":"108","line":43,"column":8,"nodeType":"94","endLine":43,"endColumn":10,"suggestions":"109"},{"ruleId":"96","severity":1,"message":"97","line":55,"column":25,"nodeType":"98","endLine":55,"endColumn":62},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["112"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'controller' and 'subredditName'. Either include them or remove the dependency array.",["113"],"'RedditCall' is defined but never used.","'getSearchResults' is defined but never used.","'useSelector' is defined but never used.","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'controller'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has missing dependencies: 'controller' and 'match.params.id'. Either include them or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [dispatch]",{"range":"124","text":"125"},"Update the dependencies array to be: [controller, subredditName]",{"range":"126","text":"127"},"Update the dependencies array to be: [controller, dispatch]",{"range":"128","text":"129"},"Update the dependencies array to be: [controller, match.params.id]",{"range":"130","text":"131"},[547,549],"[dispatch]",[914,916],"[controller, subredditName]",[1332,1342],"[controller, dispatch]",[1707,1709],"[controller, match.params.id]"]