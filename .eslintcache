[{"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\index.js":"1","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\serviceWorker.js":"2","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\store.js":"3","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\counter\\Counter.js":"4","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\counter\\counterSlice.js":"5","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SideBar\\SideBar.js":"6","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\SubredditBox.js":"7","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\RedditPostList.js":"8","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RightSideBar\\RightSideBar.js":"9","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\reddit.js":"10","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPost\\RedditPost.js":"11","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\Header\\Header.js":"12","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\App.js":"13","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\subredditsSlice.js":"14","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\redditPostListSlice.js":"15","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\subredditPageSlice.js":"16"},{"size":644,"mtime":1612857171732,"results":"17","hashOfConfig":"18"},{"size":5141,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":560,"mtime":1612950334256,"results":"20","hashOfConfig":"18"},{"size":1626,"mtime":499162500000,"results":"21","hashOfConfig":"18"},{"size":1637,"mtime":1612298146587,"results":"22","hashOfConfig":"18"},{"size":1350,"mtime":1612950290509,"results":"23","hashOfConfig":"18"},{"size":2787,"mtime":1612970994636,"results":"24","hashOfConfig":"18"},{"size":3018,"mtime":1612976051556,"results":"25","hashOfConfig":"18"},{"size":3763,"mtime":1612907703220,"results":"26","hashOfConfig":"18"},{"size":4563,"mtime":1612953499723,"results":"27","hashOfConfig":"18"},{"size":3026,"mtime":1612904166197,"results":"28","hashOfConfig":"18"},{"size":2821,"mtime":1612974048865,"results":"29","hashOfConfig":"18"},{"size":3495,"mtime":1612971040502,"results":"30","hashOfConfig":"18"},{"size":350,"mtime":1612906200804,"results":"31","hashOfConfig":"18"},{"size":887,"mtime":1612954427309,"results":"32","hashOfConfig":"18"},{"size":1053,"mtime":1612953658170,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1yv4te4",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\index.js",[],["70","71"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\serviceWorker.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\store.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\counter\\Counter.js",[],["72","73"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SideBar\\SideBar.js",["74"],"import React from 'react';\r\nimport './SideBar.css';\r\nimport SubredditBox from '../SubredditBox/SubredditBox';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport default function SideBar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__option\" onClick={() => {\r\n                window.location.href = '/';\r\n            }}>\r\n                <HomeIcon />\r\n                <p className=\"sidebar__option__p\">Home</p>\r\n            </div>\r\n            <div className=\"sidebar__option\" onClick={() => {\r\n                window.location.href = '/popular';\r\n            }}>\r\n                <TrendingUpIcon />\r\n                <p className=\"sidebar__option__p\">Popular</p>\r\n            </div>\r\n            <div className=\"sidebar__option\" onClick={() => {\r\n                window.location.href = '/controversial';\r\n            }}>\r\n                <ForumIcon />\r\n                <p className=\"sidebar__option__p\">Controversial</p>\r\n            </div>\r\n\r\n            <div className=\"sidebar__subreddit\">\r\n                <h3 className=\"subreddit__header\">Subreddits</h3>\r\n                <SubredditBox />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\SubredditBox.js",["75","76"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\RedditPostList.js",["77","78","79"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RightSideBar\\RightSideBar.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\reddit.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPost\\RedditPost.js",["80","81","82"],"import React from 'react';\r\nimport './RedditPost.css';\r\nimport { useState, useEffect } from 'react';\r\nimport RedditCall from '../../app/reddit';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ModeCommentIcon from '@material-ui/icons/ModeComment';\r\nimport MoreIcon from '@material-ui/icons/More';\r\n\r\nexport default function RedditPost(props) {\r\n    const [subredditIcon, setSubredditIcon] = useState('');\r\n    const subredditName = props.post.data.subreddit_name_prefixed;\r\n\r\n    useEffect(() => {\r\n        RedditCall.fetchSubredditAbout(subredditName).then(results => {\r\n            setSubredditIcon(results.icon_img)\r\n        })\r\n    }, [])\r\n\r\n    var unixTimestamp = props.post.data.created_utc;\r\n    var dat = new Date(unixTimestamp * 1000);\r\n    var hours = dat.getHours();\r\n    var realTime = hours + ' hours';\r\n    \r\n\r\n    return (\r\n        <div className=\"redditpost\">\r\n            <div className=\"redditpost__top\">\r\n                <div className=\"redditpost-subreddit-image\" onClick={() => {\r\n                window.location.href=`/${props.post.data.subreddit_name_prefixed}`;\r\n                }}>\r\n                    <img src={subredditIcon} />\r\n                </div>\r\n                <p className=\"redditpost-sub\" onClick={() => {\r\n                window.location.href=`/${props.post.data.subreddit_name_prefixed}`;\r\n                }}>{props.post.data.subreddit_name_prefixed}</p>\r\n                <p className=\"redditpost-by\">Posted by u/{props.post.data.author}</p>\r\n                <p className=\"redditpost-time\">{realTime} ago</p>\r\n            </div>\r\n            <div className=\"redditpost__middle\">\r\n                <h3 className=\"redditpost-post\">{props.post.data.title}</h3>\r\n                {props.post.data.url_overridden_by_dest && (\r\n                    <div className=\"redditpost-post-image\" onError={(e) => e.target.style.display = \"none\"}>\r\n                        <img src={props.post.data.url_overridden_by_dest}/>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"redditpost__bottom\">\r\n                <div className=\"redditpost-total-likes\">\r\n                    <ArrowUpwardIcon />\r\n                    <p className=\"redditpost-likes\">{props.post.data.score > 1000 ? (props.post.data.score / 1000).toFixed(1) + 'k': props.post.data.score}</p>\r\n                    <ArrowDownwardIcon />\r\n                </div>\r\n                <div className=\"redditpost-total-comments\">\r\n                    <ModeCommentIcon />\r\n                    <p className=\"redditpost-comment\">{props.post.data.num_comments > 1000 ? (props.post.data.num_comments / 1000).toFixed(1) + 'k': props.post.data.num_comments}</p>\r\n                </div>\r\n                <div className=\"redditpost-total-details\">\r\n                    <MoreIcon />\r\n                    <p className=\"redditpost-details\">Details</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\Header\\Header.js",["83"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\App.js",["84"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\subredditsSlice.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\redditPostListSlice.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\subredditPageSlice.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":9,"column":10,"nodeType":"93","messageId":"94","endLine":9,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":18,"column":8,"nodeType":"97","endLine":18,"endColumn":10,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":46,"column":29,"nodeType":"101","endLine":46,"endColumn":60},{"ruleId":"91","severity":1,"message":"102","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":18},{"ruleId":"91","severity":1,"message":"103","line":9,"column":8,"nodeType":"93","messageId":"94","endLine":9,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":24,"column":33,"nodeType":"101","endLine":24,"endColumn":71},{"ruleId":"95","severity":1,"message":"104","line":19,"column":8,"nodeType":"97","endLine":19,"endColumn":10,"suggestions":"105"},{"ruleId":"99","severity":1,"message":"100","line":33,"column":21,"nodeType":"101","endLine":33,"endColumn":48},{"ruleId":"99","severity":1,"message":"100","line":45,"column":25,"nodeType":"101","endLine":45,"endColumn":76},{"ruleId":"99","severity":1,"message":"100","line":38,"column":21,"nodeType":"101","endLine":38,"endColumn":47},{"ruleId":"95","severity":1,"message":"96","line":44,"column":6,"nodeType":"97","endLine":44,"endColumn":8,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SearchIcon' is defined but never used.","'MenuIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'subredditName'. Either include it or remove the dependency array.",["110"],["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"112","fix":"116"},"Update the dependencies array to be: [dispatch]",{"range":"117","text":"118"},"Update the dependencies array to be: [subredditName]",{"range":"119","text":"120"},{"range":"121","text":"118"},[665,667],"[dispatch]",[731,733],"[subredditName]",[1824,1826]]