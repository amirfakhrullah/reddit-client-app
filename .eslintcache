[{"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\index.js":"1","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\serviceWorker.js":"2","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\store.js":"3","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\counter\\Counter.js":"4","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\counter\\counterSlice.js":"5","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SideBar\\SideBar.js":"6","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\SubredditBox.js":"7","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\RedditPostList.js":"8","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RightSideBar\\RightSideBar.js":"9","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\reddit.js":"10","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPost\\RedditPost.js":"11","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\Header\\Header.js":"12","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\App.js":"13","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\subredditsSlice.js":"14","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\redditPostListSlice.js":"15"},{"size":644,"mtime":1612857171732,"results":"16","hashOfConfig":"17"},{"size":5141,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":439,"mtime":1612864569178,"results":"19","hashOfConfig":"17"},{"size":1626,"mtime":499162500000,"results":"20","hashOfConfig":"17"},{"size":1637,"mtime":1612298146587,"results":"21","hashOfConfig":"17"},{"size":1541,"mtime":1612904727290,"results":"22","hashOfConfig":"17"},{"size":1555,"mtime":1612907259575,"results":"23","hashOfConfig":"17"},{"size":421,"mtime":1612865650130,"results":"24","hashOfConfig":"17"},{"size":3763,"mtime":1612907703220,"results":"25","hashOfConfig":"17"},{"size":2797,"mtime":1612903720616,"results":"26","hashOfConfig":"17"},{"size":3026,"mtime":1612904166197,"results":"27","hashOfConfig":"17"},{"size":2099,"mtime":1612623841495,"results":"28","hashOfConfig":"17"},{"size":2318,"mtime":1612905562815,"results":"29","hashOfConfig":"17"},{"size":350,"mtime":1612906200804,"results":"30","hashOfConfig":"17"},{"size":913,"mtime":1612903833781,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1yv4te4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\index.js",[],["66","67"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\serviceWorker.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\store.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\counter\\Counter.js",[],["68","69"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SideBar\\SideBar.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\SubredditBox.js",["70","71"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\RedditPostList.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RightSideBar\\RightSideBar.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\app\\reddit.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPost\\RedditPost.js",["72","73","74"],"import React from 'react';\r\nimport './RedditPost.css';\r\nimport { useState, useEffect } from 'react';\r\nimport RedditCall from '../../app/reddit';\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ModeCommentIcon from '@material-ui/icons/ModeComment';\r\nimport MoreIcon from '@material-ui/icons/More';\r\n\r\nexport default function RedditPost(props) {\r\n    const [subredditIcon, setSubredditIcon] = useState('');\r\n    const subredditName = props.post.data.subreddit_name_prefixed;\r\n\r\n    useEffect(() => {\r\n        RedditCall.fetchSubredditAbout(subredditName).then(results => {\r\n            setSubredditIcon(results.icon_img)\r\n        })\r\n    }, [])\r\n\r\n    var unixTimestamp = props.post.data.created_utc;\r\n    var dat = new Date(unixTimestamp * 1000);\r\n    var hours = dat.getHours();\r\n    var realTime = hours + ' hours';\r\n    \r\n\r\n    return (\r\n        <div className=\"redditpost\">\r\n            <div className=\"redditpost__top\">\r\n                <div className=\"redditpost-subreddit-image\" onClick={() => {\r\n                window.location.href=`/${props.post.data.subreddit_name_prefixed}`;\r\n                }}>\r\n                    <img src={subredditIcon} />\r\n                </div>\r\n                <p className=\"redditpost-sub\" onClick={() => {\r\n                window.location.href=`/${props.post.data.subreddit_name_prefixed}`;\r\n                }}>{props.post.data.subreddit_name_prefixed}</p>\r\n                <p className=\"redditpost-by\">Posted by u/{props.post.data.author}</p>\r\n                <p className=\"redditpost-time\">{realTime} ago</p>\r\n            </div>\r\n            <div className=\"redditpost__middle\">\r\n                <h3 className=\"redditpost-post\">{props.post.data.title}</h3>\r\n                {props.post.data.url_overridden_by_dest && (\r\n                    <div className=\"redditpost-post-image\" onError={(e) => e.target.style.display = \"none\"}>\r\n                        <img src={props.post.data.url_overridden_by_dest}/>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"redditpost__bottom\">\r\n                <div className=\"redditpost-total-likes\">\r\n                    <ArrowUpwardIcon />\r\n                    <p className=\"redditpost-likes\">{props.post.data.score > 1000 ? (props.post.data.score / 1000).toFixed(1) + 'k': props.post.data.score}</p>\r\n                    <ArrowDownwardIcon />\r\n                </div>\r\n                <div className=\"redditpost-total-comments\">\r\n                    <ModeCommentIcon />\r\n                    <p className=\"redditpost-comment\">{props.post.data.num_comments > 1000 ? (props.post.data.num_comments / 1000).toFixed(1) + 'k': props.post.data.num_comments}</p>\r\n                </div>\r\n                <div className=\"redditpost-total-details\">\r\n                    <MoreIcon />\r\n                    <p className=\"redditpost-details\">Details</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\Header\\Header.js",["75","76"],"import React from 'react';\r\nimport './Header.css';\r\nimport { useState } from 'react';\r\nimport RedditCall from '../../app/reddit';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nexport default function Header() {\r\n    const [searchItem, setSearchItem] = useState([]);\r\n\r\n    const onKeyPress = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setSearchItem(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <div className=\"reddit-logo\">\r\n                    <img src=\"./reddit.png\" />\r\n                </div>\r\n                <div className=\"searchbar\">\r\n                    <SearchIcon />\r\n                    <input type=\"text\" placeholder=\"search...\" onChange={onChange} value={searchItem} onKeyPress={onKeyPress} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__middle\">\r\n                <div className=\"header__option active\" onClick={() => {\r\n                    window.location.href='/hot'\r\n                }}>\r\n                    <WhatshotIcon />\r\n                    <p className=\"header-nav-title\">Hot</p>\r\n                </div>\r\n                <div className=\"header__option\" onClick={() => {\r\n                    window.location.href='/latest'\r\n                }}>\r\n                    <FiberNewIcon />\r\n                    <p className=\"header-nav-title\">Latest</p>\r\n                </div>\r\n                <div className=\"header__option\" onClick={() => {\r\n                    window.location.href='/top'\r\n                }}>\r\n                    <BarChartIcon />\r\n                    <p className=\"header-nav-title\">Top</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <MenuIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\App.js",["77"],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\SubredditBox\\subredditsSlice.js",[],"C:\\Users\\ROG\\Projects\\Codecademy\\reddit\\src\\features\\RedditPostList\\redditPostListSlice.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":17,"column":8,"nodeType":"86","endLine":17,"endColumn":10,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":30,"column":29,"nodeType":"90","endLine":30,"endColumn":60},{"ruleId":"84","severity":1,"message":"91","line":19,"column":8,"nodeType":"86","endLine":19,"endColumn":10,"suggestions":"92"},{"ruleId":"88","severity":1,"message":"89","line":33,"column":21,"nodeType":"90","endLine":33,"endColumn":48},{"ruleId":"88","severity":1,"message":"89","line":45,"column":25,"nodeType":"90","endLine":45,"endColumn":76},{"ruleId":"93","severity":1,"message":"94","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":27,"column":21,"nodeType":"90","endLine":27,"endColumn":47},{"ruleId":"84","severity":1,"message":"85","line":28,"column":6,"nodeType":"86","endLine":28,"endColumn":8,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'subredditName'. Either include it or remove the dependency array.",["101"],"no-unused-vars","'RedditCall' is defined but never used.","Identifier","unusedVar",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"103","fix":"107"},"Update the dependencies array to be: [dispatch]",{"range":"108","text":"109"},"Update the dependencies array to be: [subredditName]",{"range":"110","text":"111"},{"range":"112","text":"109"},[503,505],"[dispatch]",[731,733],"[subredditName]",[1046,1048]]